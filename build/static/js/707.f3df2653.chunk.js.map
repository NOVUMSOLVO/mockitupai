{"version":3,"file":"static/js/707.f3df2653.chunk.js","mappings":"2KAGe,SAASA,IACtB,MAAM,YAAEC,EAAW,iBAAEC,IAAqBC,EAAAA,EAAAA,MACnCC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAwBC,IAA6BJ,EAAAA,EAAAA,WAAS,IAC9DK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,OAC5BO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,OAEvCS,EAAAA,EAAAA,YAAU,KACyBC,WAC/B,GAAKf,EAEL,IACEO,GAAW,GACXI,EAAS,MAGT,MAAMK,QAAiBC,MAAM,wBAAyB,CACpDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQvB,EAAYwB,QAIlBC,QAAaT,EAASU,OAE5B,GAAID,EAAKf,MACP,MAAM,IAAIiB,MAAMF,EAAKf,OAGvBN,EAAgBqB,EAAKtB,aACvB,CAAE,MAAOyB,GACPC,QAAQnB,MAAM,+BAAgCkB,GAC9CjB,EAAS,+DACX,CAAC,QACCJ,GAAW,EACb,GAGFuB,EAA0B,GACzB,CAAC9B,IA2CJ,OAAKA,EAQDM,GAEAyB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,sCAK9B9B,GAAwC,aAAxBA,EAAa+B,QAAoD,UAAX,OAAhBjC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkC,OAgB3EC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,4BAGtDrB,IACCmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAAgFC,SAC5FrB,IAKJF,IACCqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2EAA0EC,SACtFvB,KAIL0B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMC,SAAA,EACnBG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,kBACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SACrB,SAAX,OAAhBhC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkC,MAAiB,MACR,eAAX,OAAhBlC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkC,MAAuB,YAAc,aAI5DC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,YACxCG,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,sBAAqBC,SAAA,CACV,WAAxB9B,EAAa+B,SAAwB/B,EAAakC,oBACjDN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,WAEV,WAAxB9B,EAAa+B,QAAuB/B,EAAakC,oBAChDN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,SAAC,cAEX,WAAxB9B,EAAa+B,SACZH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAE9B,EAAa+B,eAKnD/B,EAAamC,mBACZF,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SACpC9B,EAAakC,kBAAoB,eAAiB,uBAErDN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SAChD,IAAIM,KAAqC,IAAhCpC,EAAamC,kBAAyBE,0BAKrDrC,EAAasC,gBACZL,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,oBACxCG,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,oCAAmCC,SAAA,CAChD9B,EAAasC,cAAcC,MAAM,6BAAOvC,EAAasC,cAAcE,gBAM5EP,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uBAAsBC,SAAA,CACV,WAAxB9B,EAAa+B,QAAwB/B,EAAakC,kBAQvB,WAAxBlC,EAAa+B,QAAuB/B,EAAakC,mBACnDN,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAA8BC,SAAC,iFAG1C,MAXFF,EAAAA,EAAAA,KAAA,UACEa,QA1IuB7B,UAC/B,GAAKf,GAAgBG,EAErB,IACEM,GAA0B,GAC1BE,EAAS,MAGT,MAAMK,QAAiBC,MAAM,2BAA4B,CACvDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQvB,EAAYwB,IACpBqB,eAAgB1C,EAAa2C,OAI3BrB,QAAaT,EAASU,OAE5B,GAAID,EAAKf,MACP,MAAM,IAAIiB,MAAMF,EAAKf,OAGvBG,EAAW,2GAGXT,GAAe2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACZ5C,GAAY,IACf+B,OAAQ,WACRG,mBAAmB,IAEvB,CAAE,MAAOT,GACPC,QAAQnB,MAAM,gCAAiCkB,GAC/CjB,EAAS,4EACX,CAAC,QACCF,GAA0B,EAC5B,GAqGQuC,SAAUxC,EACVwB,UAAU,gKAA+JC,SAExKzB,EAAyB,eAAiB,yBAQ/CuB,EAAAA,EAAAA,KAAA,UACEa,QAASA,IAAMK,OAAOC,SAASC,KAAO,WACtCnB,UAAU,wKAAuKC,SAErJ,UAAX,OAAhBhC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkC,MAAkB,eAAiB,uBA/F1DC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,6BACvDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,iDAClCF,EAAAA,EAAAA,KAAA,UACEa,QAASA,IAAMK,OAAOC,SAASC,KAAO,WACtCnB,UAAU,wKAAuKC,SAClL,mBAtBHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC7CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,iDAmHrC,CC3Me,SAASmB,EAAaC,GAAe,IAAd,QAAEC,GAASD,EAC/C,MAAM,YAAErD,EAAW,OAAEuD,IAAWrD,EAAAA,EAAAA,MACzBsD,EAAWC,IAAgBpD,EAAAA,EAAAA,UAAS,WAE3C,IAAKL,EACH,OACE+B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kHAAiHC,UAC9HG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kEAAiEC,SAAA,EAC9EF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2CACHF,EAAAA,EAAAA,KAAA,UACEa,QAASU,EACTtB,UAAU,qEAAoEC,SAC/E,eAiBT,OACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6EAA4EC,UACzFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,UACnFG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,MAAKC,SAAA,EAClBG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,SAAC,oBACjDF,EAAAA,EAAAA,KAAA,UACEa,QAASU,EACTtB,UAAU,oCACV,aAAW,kBAAiBC,UAE5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAU0B,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAW3B,UAC5EF,EAAAA,EAAAA,KAAA,QAAM8B,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,iCAK3E5B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mFAAkFC,UAC/FF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBC,SACrCjC,EAAYiE,YAAcjE,EAAYiE,YAAYC,OAAO,GAAGC,cAAgB,SAGjFpC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAC9CjC,EAAYiE,aAAe,UAE9BlC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAEjC,EAAYoE,cAItDhC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,CACvB,CAAC,UAAW,gBAAgBoC,KAAKC,IAChCvC,EAAAA,EAAAA,KAAA,UAEEa,QAASA,IAAMa,EAAaa,GAC5BtC,UAAS,yCAAAuC,OACPf,IAAcc,EACV,uCACA,mCACHrC,SAEFqC,EAAIJ,OAAO,GAAGC,cAAgBG,EAAIE,MAAM,IARpCF,MAWTvC,EAAAA,EAAAA,KAAA,UACEa,QA1DG7B,UACnB,UACQwC,IACFD,GAASA,GACf,CAAE,MAAO5C,GACPmB,QAAQnB,MAAM,iBAAkBA,EAClC,GAqDgBsB,UAAU,wEAAuEC,SAClF,kBAMLG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,SAAQC,SAAA,CACN,YAAduB,IACCpB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iDAAgDC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,yBACvDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,EACxBG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0CAAyCC,SAAC,UAC3DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SACtCjC,EAAYiE,aAAe,gBAGhC7B,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0CAAyCC,SAAC,WAC3DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAEjC,EAAYoE,iBAKhD,iBAAdZ,IAAgCzB,EAAAA,EAAAA,KAAChC,EAAsB,kBAQxE,C","sources":["SubscriptionManagement.js","UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\n\nexport default function SubscriptionManagement() {\n  const { currentUser, userSubscription } = useAuth();\n  const [subscription, setSubscription] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [cancellationInProgress, setCancellationInProgress] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    const fetchSubscriptionDetails = async () => {\n      if (!currentUser) return;\n      \n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Make API request to get subscription details\n        const response = await fetch('/api/get-subscription', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            userId: currentUser.uid,\n          }),\n        });\n        \n        const data = await response.json();\n        \n        if (data.error) {\n          throw new Error(data.error);\n        }\n        \n        setSubscription(data.subscription);\n      } catch (err) {\n        console.error('Error fetching subscription:', err);\n        setError('Failed to load subscription details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchSubscriptionDetails();\n  }, [currentUser]);\n\n  const handleCancelSubscription = async () => {\n    if (!currentUser || !subscription) return;\n    \n    try {\n      setCancellationInProgress(true);\n      setError(null);\n      \n      // Make API request to cancel subscription\n      const response = await fetch('/api/cancel-subscription', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId: currentUser.uid,\n          subscriptionId: subscription.id,\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.error) {\n        throw new Error(data.error);\n      }\n      \n      setSuccess('Your subscription has been canceled. You will have access until the end of your current billing period.');\n      \n      // Update local subscription state\n      setSubscription({\n        ...subscription,\n        status: 'canceled',\n        cancelAtPeriodEnd: true,\n      });\n    } catch (err) {\n      console.error('Error canceling subscription:', err);\n      setError('Failed to cancel subscription. Please try again later or contact support.');\n    } finally {\n      setCancellationInProgress(false);\n    }\n  };\n\n  if (!currentUser) {\n    return (\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <p className=\"text-gray-500\">Please sign in to manage your subscription.</p>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <p className=\"text-gray-500\">Loading subscription details...</p>\n      </div>\n    );\n  }\n\n  if (!subscription || subscription.status === 'canceled' || userSubscription?.tier === 'free') {\n    return (\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Subscription Management</h3>\n        <p className=\"text-gray-500 mb-4\">You don't have an active paid subscription.</p>\n        <button\n          onClick={() => window.location.href = '#pricing'}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none\"\n        >\n          View Plans\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Subscription Management</h3>\n      \n      {/* Success Message */}\n      {success && (\n        <div className=\"mb-4 bg-green-50 border border-green-200 text-green-800 rounded-md p-4 text-sm\">\n          {success}\n        </div>\n      )}\n      \n      {/* Error Message */}\n      {error && (\n        <div className=\"mb-4 bg-red-50 border border-red-200 text-red-800 rounded-md p-4 text-sm\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"mb-6\">\n        <div className=\"flex justify-between mb-2\">\n          <span className=\"text-sm text-gray-500\">Current Plan</span>\n          <span className=\"text-sm font-medium text-gray-900\">\n            {userSubscription?.tier === 'pro' ? 'Pro' : \n             userSubscription?.tier === 'unlimited' ? 'Unlimited' : 'Free'}\n          </span>\n        </div>\n        \n        <div className=\"flex justify-between mb-2\">\n          <span className=\"text-sm text-gray-500\">Status</span>\n          <span className=\"text-sm font-medium\">\n            {subscription.status === 'active' && !subscription.cancelAtPeriodEnd && (\n              <span className=\"text-green-600\">Active</span>\n            )}\n            {subscription.status === 'active' && subscription.cancelAtPeriodEnd && (\n              <span className=\"text-yellow-600\">Canceling</span>\n            )}\n            {subscription.status !== 'active' && (\n              <span className=\"text-gray-600\">{subscription.status}</span>\n            )}\n          </span>\n        </div>\n        \n        {subscription.currentPeriodEnd && (\n          <div className=\"flex justify-between mb-2\">\n            <span className=\"text-sm text-gray-500\">\n              {subscription.cancelAtPeriodEnd ? 'Access Until' : 'Next Billing Date'}\n            </span>\n            <span className=\"text-sm font-medium text-gray-900\">\n              {new Date(subscription.currentPeriodEnd * 1000).toLocaleDateString()}\n            </span>\n          </div>\n        )}\n        \n        {subscription.paymentMethod && (\n          <div className=\"flex justify-between mb-2\">\n            <span className=\"text-sm text-gray-500\">Payment Method</span>\n            <span className=\"text-sm font-medium text-gray-900\">\n              {subscription.paymentMethod.brand} •••• {subscription.paymentMethod.last4}\n            </span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"flex justify-between\">\n        {subscription.status === 'active' && !subscription.cancelAtPeriodEnd ? (\n          <button\n            onClick={handleCancelSubscription}\n            disabled={cancellationInProgress}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none\"\n          >\n            {cancellationInProgress ? 'Canceling...' : 'Cancel Subscription'}\n          </button>\n        ) : subscription.status === 'active' && subscription.cancelAtPeriodEnd ? (\n          <p className=\"text-sm text-gray-500 italic\">\n            Your subscription will be canceled at the end of the current billing period.\n          </p>\n        ) : null}\n        \n        <button\n          onClick={() => window.location.href = '#pricing'}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none\"\n        >\n          {userSubscription?.tier === 'free' ? 'Upgrade Plan' : 'Change Plan'}\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport SubscriptionManagement from './SubscriptionManagement';\n\nexport default function UserDashboard({ onClose }) {\n  const { currentUser, logout } = useAuth();\n  const [activeTab, setActiveTab] = useState('profile');\n\n  if (!currentUser) {\n    return (\n      <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 overflow-y-auto h-full w-full z-50 flex justify-center items-center p-4\">\n        <div className=\"bg-white rounded-xl shadow-2xl max-w-3xl w-full p-6 text-center\">\n          <p>Please log in to view your dashboard.</p>\n          <button\n            onClick={onClose}\n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      if (onClose) onClose();\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 overflow-y-auto h-full w-full z-50\">\n      <div className=\"flex justify-center items-start min-h-full p-4\">\n        <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full my-8 overflow-hidden\">\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-bold text-gray-800\">User Dashboard</h2>\n              <button\n                onClick={onClose}\n                className=\"text-gray-500 hover:text-gray-700\"\n                aria-label=\"Close dashboard\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row gap-6\">\n              <div className=\"w-full md:w-1/3 space-y-4\">\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-center\">\n                    <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                      <span className=\"text-2xl text-blue-600\">\n                        {currentUser.displayName ? currentUser.displayName.charAt(0).toUpperCase() : 'U'}\n                      </span>\n                    </div>\n                    <h3 className=\"text-lg font-medium text-gray-900\">\n                      {currentUser.displayName || 'User'}\n                    </h3>\n                    <p className=\"text-sm text-gray-500\">{currentUser.email}</p>\n                  </div>\n                </div>\n\n                <nav className=\"space-y-1\">\n                  {['profile', 'subscription'].map((tab) => (\n                    <button\n                      key={tab}\n                      onClick={() => setActiveTab(tab)}\n                      className={`w-full text-left px-4 py-2 rounded-md ${\n                        activeTab === tab\n                          ? 'bg-blue-50 text-blue-700 font-medium'\n                          : 'text-gray-700 hover:bg-gray-100'\n                      }`}\n                    >\n                      {tab.charAt(0).toUpperCase() + tab.slice(1)}\n                    </button>\n                  ))}\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full text-left px-4 py-2 rounded-md text-gray-700 hover:bg-gray-100\"\n                  >\n                    Logout\n                  </button>\n                </nav>\n              </div>\n\n              <div className=\"flex-1\">\n                {activeTab === 'profile' && (\n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Profile Information</h3>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Name</label>\n                        <p className=\"mt-1 text-sm text-gray-900\">\n                          {currentUser.displayName || 'Not set'}\n                        </p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                        <p className=\"mt-1 text-sm text-gray-900\">{currentUser.email}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {activeTab === 'subscription' && <SubscriptionManagement />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["SubscriptionManagement","currentUser","userSubscription","useAuth","subscription","setSubscription","useState","loading","setLoading","cancellationInProgress","setCancellationInProgress","error","setError","success","setSuccess","useEffect","async","response","fetch","method","headers","body","JSON","stringify","userId","uid","data","json","Error","err","console","fetchSubscriptionDetails","_jsx","className","children","status","tier","_jsxs","cancelAtPeriodEnd","currentPeriodEnd","Date","toLocaleDateString","paymentMethod","brand","last4","onClick","subscriptionId","id","_objectSpread","disabled","window","location","href","UserDashboard","_ref","onClose","logout","activeTab","setActiveTab","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","displayName","charAt","toUpperCase","email","map","tab","concat","slice"],"sourceRoot":""}