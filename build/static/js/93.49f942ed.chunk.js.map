{"version":3,"file":"static/js/93.49f942ed.chunk.js","mappings":"6MAMA,MAuRA,EAvRkBA,KAAO,IAADC,EAAAC,EACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,MAELC,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,IAC/BK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAAcC,IAAmBV,EAAAA,EAAAA,WAAS,IAC1CW,EAAcC,IAAmBZ,EAAAA,EAAAA,WAAS,IAG3C,MAAEa,EAAK,gBAAEC,EAAe,gBAAEC,EAAe,YAAEC,IAAgBC,EAAAA,EAAAA,KAC3DC,GAAWC,EAAAA,EAAAA,MAEXC,GAAqB,QAAdxB,GADIyB,EAAAA,EAAAA,MACKC,aAAK,IAAA1B,GAAM,QAANC,EAAdD,EAAgBwB,YAAI,IAAAvB,OAAN,EAAdA,EAAsB0B,WAAY,KAG/CC,EAAAA,EAAAA,YAAU,KACJR,GACFE,EAASE,EAAM,CAAEK,SAAS,GAC5B,GACC,CAACT,EAAaE,EAAUE,IAE3B,MAgBMM,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B/B,GAAYgC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP,CAACH,GAAOC,MAGN1B,EAAOyB,IACTxB,GAAU2B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACP,CAACH,GAAO,MAEZ,EAwBIK,EAAoBC,UACxB1B,EAAS,IACT,IACmB,WAAb2B,QACIrB,IACgB,WAAbqB,SACHpB,IAERG,EAASE,EAAM,CAAEK,SAAS,GAC5B,CAAE,MAAOW,GACPC,QAAQ9B,MAAM,GAAD+B,OAAIH,EAAQ,kBAAkBC,GAC3C5B,EAAS,0BAAD8B,OAA2BH,EAAQ,uBAC7C,GAGF,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sFAAqFC,UAClGC,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTJ,UAAU,+DACVK,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IAAMT,SAAA,EAE9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6CAA4CC,SAAC,kBAG3DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,2CAK3ClC,IACCgC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,UAC9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBW,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,eAAcZ,UAC9GF,EAAAA,EAAAA,KAAA,QAAMe,SAAS,UAAUC,EAAE,0NAA0NC,SAAS,iBAGlQjB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAElC,YAM7CmC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEkB,QAASA,IAAMxB,EAAkB,UACjCO,UAAU,gOACVkB,SAAUrD,EAAUoC,UAEpBF,EAAAA,EAAAA,KAACoB,EAAAA,IAAQ,CAACnB,UAAU,8BAGxBD,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEkB,QAASA,IAAMxB,EAAkB,UACjCO,UAAU,gOACVkB,SAAUrD,EAAUoC,UAEpBF,EAAAA,EAAAA,KAACqB,EAAAA,IAAQ,CAACpB,UAAU,kCAK1BE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAEjBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,UACnDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8BAA6BC,SAAC,iCAIlDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,iBAAiBqB,SAnGpB3B,UAInB,GAHAP,EAAEmC,iBACFtD,EAAS,IAjCUuD,MACnB,MAAMC,EAAY,CAAC,EAYnB,OAXKlE,EAASG,MAEF,eAAegE,KAAKnE,EAASG,SACvC+D,EAAU/D,MAAQ,oBAFlB+D,EAAU/D,MAAQ,oBAIfH,EAASI,SAEHJ,EAASI,SAASgE,OAAS,IACpCF,EAAU9D,SAAW,0CAFrB8D,EAAU9D,SAAW,uBAIvBE,EAAU4D,GAC+B,IAAlCG,OAAOC,KAAKJ,GAAWE,MAAY,EAsBrCH,GAAL,CAEAzD,GAAa,GACbM,GAAgB,GAEhB,UACQC,EAAMf,EAASG,MAAOH,EAASI,UACrCgB,EAASE,EAAM,CAAEK,SAAS,GAC5B,CAAE,MAAOW,GACPC,QAAQ9B,MAAM,gBAAiB6B,GAC/B5B,EAAS4B,EAAIiC,SAAW,iEAC1B,CAAC,QACC/D,GAAa,GACbM,GAAgB,EAClB,CAd2B,CAc3B,EAiF8D6B,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,QAAQ9B,UAAU,0CAAyCC,SAAC,mBAG3EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,UACnFF,EAAAA,EAAAA,KAACgC,EAAAA,IAAU,CAAC/B,UAAU,6BAExBD,EAAAA,EAAAA,KAAA,SACEiC,GAAG,QACH5C,KAAK,QACL6C,KAAK,QACLC,aAAa,QACbC,UAAQ,EACR9C,MAAO/B,EAASG,MAChB2E,SAAUlD,EACVc,UAAS,uCAAAF,OAAyCnC,EAAOF,MAAQ,iBAAmB,kBAAiB,0HACrG4E,YAAY,kBACZnB,SAAUrD,OAGbF,EAAOF,QACNsC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEtC,EAAOF,YAIrDyC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,WAAW9B,UAAU,0CAAyCC,SAAC,cAG9EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACC,GAAG,UAAUvC,UAAU,gDAA+CC,SAAC,sCAI/EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACC,GAAG,kBAAkBvC,UAAU,gDAA+CC,SAAC,8BAM3FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,UACnFF,EAAAA,EAAAA,KAACyC,EAAAA,IAAM,CAACxC,UAAU,6BAEpBD,EAAAA,EAAAA,KAAA,SACEiC,GAAG,WACH5C,KAAK,WACL6C,KAAMhE,EAAe,OAAS,WAC9BiE,aAAa,mBACbC,UAAQ,EACR9C,MAAO/B,EAASI,SAChB0E,SAAUlD,EACVc,UAAS,wCAAAF,OAA0CnC,EAAOD,SAAW,iBAAmB,kBAAiB,0HACzGwD,SAAUrD,KAEZkC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,KAAA,UACEkC,KAAK,SACLjC,UAAU,uDACViB,QAASA,IAAM/C,GAAiBD,GAChCwE,SAAS,KAAIxC,SAEZhC,GACC8B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUa,KAAK,OAAOD,QAAQ,YAAY8B,OAAO,eAAczC,UAC5EF,EAAAA,EAAAA,KAAA,QAAM4C,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAG9B,EAAE,gTAGvEb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAAUa,KAAK,OAAOD,QAAQ,YAAY8B,OAAO,eAAczC,SAAA,EAC5EF,EAAAA,EAAAA,KAAA,QAAM4C,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAG9B,EAAE,sCACrEhB,EAAAA,EAAAA,KAAA,QAAM4C,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAG9B,EAAE,sIAM9EpD,EAAOD,WACNqC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BC,SAAEtC,EAAOD,eAIrDwC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SACEiC,GAAG,cACH5C,KAAK,cACL6C,KAAK,WACLjC,UAAU,2EAEZD,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,cAAc9B,UAAU,mCAAkCC,SAAC,oBAK5EF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAO2C,OAAM,CACZb,KAAK,SACLjC,UAAU,sRACVkB,SAAUrD,GAAaM,EACvB4E,WAAalF,GAAcM,EAAiC,CAAC,EAAnB,CAAE6E,MAAO,MACnDC,SAAWpF,GAAcM,EAAiC,CAAC,EAAnB,CAAE6E,MAAO,KAAY/C,SAAA,EAE7DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mDAAkDC,UAChEF,EAAAA,EAAAA,KAACmD,EAAAA,IAAY,CAAClD,UAAS,yEAAAF,OAA4EjC,GAAaM,EAAgB,gBAAkB,QAEnJN,GAAaM,EAAe,gBAAkB,mBAKrD+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,6BAChCF,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACC,GAAG,UAAUvC,UAAU,oDAAmDC,SAAC,sBAMnF,C","sources":["pages/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nimport { motion } from 'framer-motion';\nimport { FaGoogle, FaGithub, FaEnvelope, FaLock, FaArrowRight } from 'react-icons/fa';\n\nconst LoginPage = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n\n  const { login, loginWithGoogle, loginWithGithub, currentUser } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || '/';\n\n  // Redirect if already logged in\n  useEffect(() => {\n    if (currentUser) {\n      navigate(from, { replace: true });\n    }\n  }, [currentUser, navigate, from]);\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    if (!validateForm()) return;\n    \n    setIsLoading(true);\n    setIsSubmitting(true);\n    \n    try {\n      await login(formData.email, formData.password);\n      navigate(from, { replace: true });\n    } catch (err) {\n      console.error('Login failed:', err);\n      setError(err.message || 'Failed to log in. Please check your credentials and try again.');\n    } finally {\n      setIsLoading(false);\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleSocialLogin = async (provider) => {\n    setError('');\n    try {\n      if (provider === 'google') {\n        await loginWithGoogle();\n      } else if (provider === 'github') {\n        await loginWithGithub();\n      }\n      navigate(from, { replace: true });\n    } catch (err) {\n      console.error(`${provider} login failed:`, err);\n      setError(`Failed to sign in with ${provider}. Please try again.`);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <motion.div \n        className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-2xl shadow-xl\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"text-center\">\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n            Welcome back\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Sign in to your account to continue\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4 rounded\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"mt-8 space-y-6\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div>\n              <button\n                onClick={() => handleSocialLogin('google')}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                disabled={isLoading}\n              >\n                <FaGoogle className=\"h-5 w-5 text-red-600\" />\n              </button>\n            </div>\n            <div>\n              <button\n                onClick={() => handleSocialLogin('github')}\n                className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                disabled={isLoading}\n              >\n                <FaGithub className=\"h-5 w-5 text-gray-800\" />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">Or continue with email</span>\n            </div>\n          </div>\n\n          <form className=\"mt-6 space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <FaEnvelope className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={formData.email}\n                  onChange={handleChange}\n                  className={`block w-full pl-10 pr-3 py-3 border ${errors.email ? 'border-red-300' : 'border-gray-300'} rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\n                  placeholder=\"you@example.com\"\n                  disabled={isLoading}\n                />\n              </div>\n              {errors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n              )}\n            </div>\n\n            <div>\n              <div className=\"flex justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"flex justify-between\">\n                  <div className=\"text-sm\">\n                    <Link to=\"/signup\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                      Don't have an account? Sign up\n                    </Link>\n                  </div>\n                  <div className=\"text-sm\">\n                    <Link to=\"/reset-password\" className=\"font-medium text-gray-600 hover:text-gray-500\">\n                      Forgot password?\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <FaLock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  autoComplete=\"current-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleChange}\n                  className={`block w-full pl-10 pr-10 py-3 border ${errors.password ? 'border-red-300' : 'border-gray-300'} rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\n                  disabled={isLoading}\n                />\n                <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-400 hover:text-gray-500 focus:outline-none\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    tabIndex=\"-1\"\n                  >\n                    {showPassword ? (\n                      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n              </div>\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\n              )}\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700\">\n                Remember me\n              </label>\n            </div>\n\n            <div>\n              <motion.button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={isLoading || isSubmitting}\n                whileHover={!isLoading && !isSubmitting ? { scale: 1.02 } : {}}\n                whileTap={!isLoading && !isSubmitting ? { scale: 0.98 } : {}}\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <FaArrowRight className={`h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition-colors ${(isLoading || isSubmitting) ? 'animate-pulse' : ''}`} />\n                </span>\n                {isLoading || isSubmitting ? 'Signing in...' : 'Sign in'}\n              </motion.button>\n            </div>\n          </form>\n\n          <div className=\"text-center text-sm\">\n            <span className=\"text-gray-600\">Don't have an account? </span>\n            <Link to=\"/signup\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"names":["LoginPage","_location$state","_location$state$from","formData","setFormData","useState","email","password","errors","setErrors","isLoading","setIsLoading","error","setError","showPassword","setShowPassword","isSubmitting","setIsSubmitting","login","loginWithGoogle","loginWithGithub","currentUser","useAuth","navigate","useNavigate","from","useLocation","state","pathname","useEffect","replace","handleChange","e","name","value","target","prev","_objectSpread","handleSocialLogin","async","provider","err","console","concat","_jsx","className","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","xmlns","viewBox","fill","fillRule","d","clipRule","onClick","disabled","FaGoogle","FaGithub","onSubmit","preventDefault","validateForm","newErrors","test","length","Object","keys","message","htmlFor","FaEnvelope","id","type","autoComplete","required","onChange","placeholder","Link","to","FaLock","tabIndex","stroke","strokeLinecap","strokeLinejoin","strokeWidth","button","whileHover","scale","whileTap","FaArrowRight"],"sourceRoot":""}